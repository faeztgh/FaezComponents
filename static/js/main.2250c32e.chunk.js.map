{"version":3,"sources":["Pages/Main/Main.jsx","Pages/Main/MainContainer.jsx","Components/Neon/Neon.jsx","Components/Buttons/DoubleBtn/DoubleBtn.jsx","Components/Buttons/Buttons.jsx","Components/ToggleBtn/ToggleBtn.jsx","Components/DarkMode/DarkMode.jsx","Components/FloatCard/FloatCard.jsx","Components/NavBar/style.js","Components/NavBar/Navbar.jsx","Components/NavBar/NavbarContainer.jsx","Pages/GettingStart/GettingStart.jsx","App.js","index.js"],"names":["Main","CssBaseline","MainContainer","Neon","props","input","fontFamily","color","fontSize","rotate","border","inputCharsArray","animation","anim","padding","className","style","transform","map","char","v1","DoubleBtn","useState","light","setLight","onClick","onMouseEnter","e","currentTarget","innerText","onMouseLeave","Buttons","content","header","MyCard","Card","CardHeader","title","CardContent","ToggleBtn","id","on","off","type","htmlFor","DarkMode","isReturningUser","localStorage","savedMode","JSON","parse","getItem","userPrefersDark","window","matchMedia","matches","getPrefColorScheme","getInitialMode","darkMode","setDarkMode","useEffect","setItem","stringify","prevMode","PresentCard","image","desc","card","document","querySelector","container","description","circle","addEventListener","xAxis","innerWidth","pageX","yAxis","pageY","transition","drawerWidth","mainBgColor","txtColor","scWidth","scHeight","innerHeight","appBarFontSize","useStyle","makeStyles","theme","appBar","zIndex","drawer","transitions","create","easing","sharp","duration","leavingScreen","background","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","display","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","mixins","Navbar","withStyles","badge","backgroundColor","boxShadow","palette","paper","position","top","left","height","borderRadius","opacity","Badge","classes","open","handleDrawerOpen","handleDrawerClose","setCurrentPage","MyAppBar","AppBar","clsx","Toolbar","IconButton","aria-label","edge","to","MyDrawer","Drawer","variant","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","primary","NavbarContainer","loading","useTheme","setOpen","currentPage","GettingStart","App","exact","path","component","FloatCard","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2250c32e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n\r\n\r\nconst Main = () => {\r\n\r\n   \r\n\r\n    return (\r\n        <>\r\n        \r\n            <CssBaseline />\r\n           \r\n\r\n            <h1>👾Wellcome To My Components🤘</h1>\r\n           \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport Main from \"./Main\";\r\n\r\nconst MainContainer = () => {\r\n    return (\r\n        <>\r\n            <Main />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default MainContainer;\r\n","import React from \"react\";\r\nimport { v1 } from \"uuid\";\r\nimport \"./neon.css\";\r\n\r\nconst Neon = (props) => {\r\n    const {\r\n        input,\r\n        fontFamily,\r\n        color,\r\n        fontSize,\r\n        rotate,\r\n        border,\r\n        animation,\r\n    } = props;\r\n\r\n    const inputCharsArray = [...input];\r\n\r\n    const anim = border === \"none\" && \"none\";\r\n    const padding = border === \"none\" && 0;\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"neon\"\r\n                style={{\r\n                    transform: `rotate(${rotate}deg)`,\r\n                    border: border,\r\n                    animation: anim,\r\n                    padding: padding,\r\n                }}\r\n            >\r\n                <p style={{ color: color, fontSize: fontSize }}>\r\n                    {inputCharsArray.map((char) => {\r\n                        return (\r\n                            <span style={{ fontFamily: fontFamily }} key={v1()}>\r\n                                {char}\r\n                            </span>\r\n                        );\r\n                    })}\r\n                </p>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Neon;\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport \"./double-btn.scss\";\r\nimport EmojiObjectsIcon from \"@material-ui/icons/EmojiObjects\";\r\nconst DoubleBtn = () => {\r\n    const [light, setLight] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"db-bulb-icon\">\r\n                {light ? (\r\n                    <EmojiObjectsIcon className=\"db-bulb-on\" fontSize=\"large\" />\r\n                ) : (\r\n                    <EmojiObjectsIcon color=\"disabled\" fontSize=\"large\" />\r\n                )}\r\n            </div>\r\n            <div className=\"db-link\">\r\n                <span\r\n                    onClick={() => setLight(false)}\r\n                    onMouseEnter={(e) => {\r\n                        e.currentTarget.innerText = \"OFF\";\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                        e.currentTarget.innerText = \"lights\";\r\n                    }}\r\n                >\r\n                    lights\r\n                </span>\r\n                <span\r\n                    onClick={() => setLight(true)}\r\n                    onMouseEnter={(e) => {\r\n                        e.currentTarget.innerText = \"ON\";\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                        e.currentTarget.innerText = \"lights\";\r\n                    }}\r\n                >\r\n                    lights\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DoubleBtn;\r\n","import React from \"react\";\r\nimport DoubleBtn from \"./DoubleBtn/DoubleBtn\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\n\r\nconst Buttons = () => {\r\n    return (\r\n        <>\r\n            <MyCard content={<DoubleBtn />} header=\"Double Button\" />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Buttons;\r\n\r\nexport const MyCard = (props) => {\r\n    const { content, header } = props;\r\n    return (\r\n        <Card>\r\n            <CardHeader title={header} />\r\n            <CardContent>{content}</CardContent>\r\n        </Card>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./toggle-btn.css\";\r\n\r\nfunction ToggleBtn(props) {\r\n    const { id, on, off, onClick } = props;\r\n   \r\n    return (\r\n        <>\r\n            <div className=\"switch\">\r\n                <input\r\n                    id={id}\r\n                    className=\"check-toggle check-toggle-round-flat\"\r\n                    type=\"checkbox\"\r\n                />\r\n                <label onClick={onClick} htmlFor={id}></label>\r\n\r\n                <span className=\"on\">{on}</span>\r\n                <span className=\"off\">{off}</span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ToggleBtn;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport ToggleBtn from \"../ToggleBtn\";\r\nimport \"./dark-mode.css\";\r\nimport { FaRegMoon } from \"react-icons/fa\";\r\nimport { BiSun } from \"react-icons/bi\";\r\nfunction DarkMode() {\r\n    const [darkMode, setDarkMode] = useState(getInitialMode());\r\n    useEffect(() => {\r\n        localStorage.setItem(\"dark\", JSON.stringify(darkMode));\r\n    }, [darkMode]);\r\n\r\n    function getInitialMode() {\r\n        const isReturningUser = \"dark\" in localStorage;\r\n        const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\r\n        const userPrefersDark = getPrefColorScheme();\r\n        // if mode was saved --> dark / light\r\n        if (isReturningUser) {\r\n            return savedMode;\r\n            // if preferred color scheme is dark --> dark\r\n        } else if (userPrefersDark) {\r\n            return true;\r\n            // otherwise --> light\r\n        } else {\r\n            return false;\r\n        }\r\n        // return savedMode || false;\r\n    }\r\n\r\n    function getPrefColorScheme() {\r\n        if (!window.matchMedia) return;\r\n\r\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    }\r\n\r\n    return (\r\n        <div className=\"tm-container\">\r\n            <div className={darkMode ? \"dark-mode\" : \"light-mode\"}>\r\n                <nav>\r\n                    <div className=\"toggle-container\">\r\n                        <span className=\"toggle\">\r\n                            <ToggleBtn\r\n                                id=\"bg-toggle\"\r\n                                darkMode={darkMode}\r\n                                onClick={() =>\r\n                                    setDarkMode((prevMode) => !prevMode)\r\n                                }\r\n                                on={<BiSun />}\r\n                                off={<FaRegMoon />}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </nav>\r\n                <main className=\"tm-main\">\r\n                    <h1>{darkMode ? \"Dark Mode\" : \"Light Mode\"}</h1>\r\n                    <h2>Toggle the switch to see the change</h2>\r\n                    <br/>\r\n                    <h4>Your choice will be saved</h4>\r\n                </main>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DarkMode;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./float-card.css\";\r\n\r\nfunction PresentCard(props) {\r\n    const { image, title, desc } = props;\r\n    useEffect(() => {\r\n        const card = document.querySelector(\".pc-card\");\r\n        const container = document.querySelector(\".pc-container\");\r\n\r\n        //Items\r\n\r\n        const title = document.querySelector(\".pc-title\");\r\n        const pic = document.querySelector(\".pc-pic img\");\r\n        const description = document.querySelector(\".pc-info h3\");\r\n        const circle = document.querySelector(\".pc-bg-circle\");\r\n        const btn = document.querySelector(\".pc-btn-container\");\r\n        container.addEventListener(\"mousemove\", (e) => {\r\n            let xAxis = (window.innerWidth / 2 - e.pageX) / -30;\r\n            let yAxis = (window.innerWidth / 4 - e.pageY) / 15;\r\n\r\n            card.style.transform = `rotateY(${yAxis}deg) rotateX(${xAxis}deg)`;\r\n        });\r\n\r\n        // Animate In\r\n        container.addEventListener(\"mouseenter\", (e) => {\r\n            card.style.transition = \"none\";\r\n            //Popout\r\n            circle.style.transform = \"translateZ(50px)\";\r\n            title.style.transform = \"translateZ(60px)\";\r\n            // pic.style.transform = \"translateZ(150px) \";\r\n            description.style.transform = \"translateZ(30px)\";\r\n            // btn.style.transform = \"translateZ(30px)\";\r\n        });\r\n\r\n        // Animate Out\r\n        container.addEventListener(\"mouseleave\", (e) => {\r\n            card.style.transition = \"all 0.5s ease\";\r\n            card.style.transform = `rotateY(0deg) rotateX(0deg)`;\r\n\r\n            //Popback\r\n            title.style.transform = \"translateZ(0px)\";\r\n            // pic.style.transform = \"translateZ(0px) rotateZ(0deg)\";\r\n            description.style.transform = \"translateZ(0px)\";\r\n            // circle.style.transform = \"translateZ(0px)\";\r\n            // btn.style.transform = \"translateZ(0px)\";\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"pc-container\">\r\n                <div className=\"pc-card\">\r\n                    <div className=\"pc-pic\">\r\n                        <div className=\"pc-bg-circle\"></div>\r\n                        <div className=\"img\">{image}</div>\r\n                    </div>\r\n                    <div className=\"pc-info\">\r\n                        <h1 className=\"pc-title\">{title}</h1>\r\n                        <h3 className=\"pc-desc\">{desc}</h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PresentCard;\r\n","import { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\n\r\nconst drawerWidth = 220;\r\nconst mainBgColor = \"#E4F0FF\";\r\nconst txtColor = \"#3F4644\";\r\nconst scWidth = window.innerWidth;\r\nconst scHeight = window.innerHeight;\r\nconst appBarFontSize =\r\n    scWidth < 800 ? (scHeight / scWidth) * 4.5 : (scWidth / scHeight) * 9;\r\n\r\nexport const useStyle = makeStyles((theme) => ({\r\n    appBar: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        background: mainBgColor,\r\n        color: txtColor,\r\n        fontSize: appBarFontSize,\r\n    },\r\n    appBarShift: {\r\n        marginLeft: drawerWidth,\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        transition: theme.transitions.create([\"width\", \"margin\"], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: 36,\r\n    },\r\n    hide: {\r\n        display: \"none\",\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n        background: mainBgColor,\r\n        color: txtColor,\r\n    },\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        background: mainBgColor,\r\n        color: txtColor,\r\n    },\r\n\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: theme.spacing(7) + 1,\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            width: theme.spacing(7) + 1,\r\n        },\r\n        background: mainBgColor,\r\n        color: txtColor,\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n    },\r\n}));\r\n\r\n// --------------- Avatar Style----------\r\nexport const StyledBadge = withStyles((theme) => ({\r\n    badge: {\r\n        backgroundColor: \"#44b700\",\r\n        color: \"#44b700\",\r\n        boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n        \"&::after\": {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderRadius: \"50%\",\r\n            animation: \"$ripple 1.2s infinite ease-in-out\",\r\n            border: \"1px solid currentColor\",\r\n            content: '\"\"',\r\n        },\r\n    },\r\n    \"@keyframes ripple\": {\r\n        \"0%\": {\r\n            transform: \"scale(.8)\",\r\n            opacity: 1,\r\n        },\r\n        \"100%\": {\r\n            transform: \"scale(2.4)\",\r\n            opacity: 0,\r\n        },\r\n    },\r\n}))(Badge);\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport WbIncandescentIcon from \"@material-ui/icons/WbIncandescent\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport EditAttributesIcon from \"@material-ui/icons/EditAttributes\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport WallpaperIcon from \"@material-ui/icons/Wallpaper\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport clsx from \"clsx\";\r\n\r\nimport { useStyle } from \"./style\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = (props) => {\r\n    const classes = useStyle();\r\n\r\n    const {\r\n        open,\r\n        handleDrawerOpen,\r\n        handleDrawerClose,\r\n        theme,\r\n        setCurrentPage,\r\n    } = props;\r\n    return (\r\n        <>\r\n            <MyAppBar\r\n                classes={classes}\r\n                open={open}\r\n                handleDrawerOpen={handleDrawerOpen}\r\n                handleDrawerClose={handleDrawerClose}\r\n            />\r\n            <MyDrawer\r\n                classes={classes}\r\n                open={open}\r\n                handleDrawerClose={handleDrawerClose}\r\n                setCurrentPage={setCurrentPage}\r\n                theme={theme}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nexport const MyAppBar = (props) => {\r\n    const { classes, open, handleDrawerOpen, handleDrawerClose } = props;\r\n    return (\r\n        <AppBar\r\n            color=\"inherit\"\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, {\r\n                        [classes.hide]: open,\r\n                    })}\r\n                >\r\n                    <MenuIcon />\r\n                </IconButton>\r\n                <Link to=\"/\" onClick={handleDrawerClose}>\r\n                    <h1>Faez Components</h1>\r\n                </Link>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport const MyDrawer = (props) => {\r\n    const { classes, open, handleDrawerClose, setCurrentPage, theme } = props;\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"permanent\"\r\n            className={clsx(classes.drawer, {\r\n                [classes.drawerOpen]: open,\r\n                [classes.drawerClose]: !open,\r\n            })}\r\n            classes={{\r\n                paper: clsx({\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open,\r\n                }),\r\n            }}\r\n        >\r\n            <div className={classes.toolbar}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === \"rtl\" ? (\r\n                        <ChevronRightIcon />\r\n                    ) : (\r\n                        <ChevronLeftIcon />\r\n                    )}\r\n                </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n                <Link to=\"/gettingstart\">\r\n                    <ListItem button onClick={handleDrawerClose}>\r\n                        <ListItemIcon>\r\n                            <DescriptionIcon color=\"primary\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Getting Start\"} />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n                <Link to=\"/neon\">\r\n                    <ListItem button onClick={handleDrawerClose}>\r\n                        <ListItemIcon>\r\n                            <WbIncandescentIcon color=\"action\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Neon\"} />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/floatcard\">\r\n                    <ListItem button onClick={handleDrawerClose}>\r\n                        <ListItemIcon>\r\n                            <WallpaperIcon color=\"action\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Float Card\"} />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/darkmode\">\r\n                    <ListItem button onClick={handleDrawerClose}>\r\n                        <ListItemIcon>\r\n                            <Brightness4Icon color=\"action\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Dark/Light Mode\"} />\r\n                    </ListItem>\r\n                </Link>\r\n                <Link to=\"/buttons\">\r\n                    <ListItem button onClick={handleDrawerClose}>\r\n                        <ListItemIcon>\r\n                            <EditAttributesIcon color=\"action\" />\r\n                        </ListItemIcon>\r\n                        <ListItemText primary={\"Buttons\"} />\r\n                    </ListItem>\r\n                </Link>\r\n            </List>\r\n        </Drawer>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nconst NavbarContainer = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const theme = useTheme();\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const [currentPage, setCurrentPage] = useState(\"GettingStart\");\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <>\r\n            <Navbar\r\n                loading={loading}\r\n                open={open}\r\n                handleDrawerOpen={handleDrawerOpen}\r\n                handleDrawerClose={handleDrawerClose}\r\n                theme={theme}\r\n                setCurrentPage={setCurrentPage}\r\n                currentPage={currentPage}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavbarContainer;\r\n","import React from \"react\";\r\nimport { NavbarContainer } from \"../../Components\";\r\n\r\nconst GettingStart = () => {\r\n    return (\r\n        <>\r\n\r\n            <code>\r\n                <h1>Under Construction ...</h1>\r\n            </code>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GettingStart;\r\n","import \"./App.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { MainContainer } from \"./Pages\";\nimport {\n    Neon,\n    NavbarContainer,\n    FloatCard,\n    DarkMode,\n    Buttons,\n} from \"./Components\";\nimport { GettingStart } from \"./Pages\";\n\nfunction App() {\n    const scWidth = window.innerWidth;\n    return (\n        <>\n            <Router>\n                <NavbarContainer />\n\n                <Switch>\n                    <Route exact path=\"/\" component={MainContainer} />\n\n                    <Route\n                        path=\"/gettingstart\"\n                        component={() => <GettingStart />}\n                    />\n                    <Route\n                        path=\"/neon\"\n                        component={() => (\n                            <Neon\n                                input=\"Welcome\"\n                                fontSize={scWidth / 50}\n                                color=\"white\"\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/floatcard\"\n                        component={() => (\n                            <FloatCard\n                                title=\"welcome\"\n                                desc=\"This is a useless text just for show off!\"\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/darkmode\"\n                        component={() => (\n                            <DarkMode\n                                title=\"welcome\"\n                                desc=\"This is a useless text just for show off!\"\n                            />\n                        )}\n                    />\n                    <Route path=\"/buttons\" component={() => <Buttons />} />\n                    <Route path=\"/*\" component={() => <h1>404 Not Found</h1>} />\n                </Switch>\n            </Router>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}